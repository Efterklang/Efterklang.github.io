{"posts":[{"title":"","text":"h1 { font-family: Consolas; color: #426cc2; text-align: center; font-style: bold; /* font-size: 3em; */ } div.intro-container { background-color:rgba(255, 255, 255, 0.1); border: 1px solid rgba(0, 0, 0, 0.1); /* 更改边框颜色和透明度 */ padding: 20px; margin: 10px; border-radius: 10px; box-shadow: 10px 10px 20px rgba(0, 0, 0, 0.2); } p.intro::first-letter { font-size: 3em; line-height: 0.8; float: left; padding-top: 0.1em; padding-right: 0.1em; font-style: bold; } p.intro:hover::first-letter { color: #426cc2; font-size: 3em; line-height: 0.8; float: left; padding-top: 0.1em; padding-right: 0.1em; font-style: bold; } p.intro { color: #8dbeea; line-height: 1.5; text-align: left; font-family: Consolas; font-style: bold; } .title_card { display: flex; /* 使用flex布局 */ position: relative; /* 添加relative定位 */ box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2); transition: 0.3s; width: 100%; height: 100%; border-radius: 5px; overflow: hidden; align-items: center; /* 垂直居中 */ justify-content: center; /* 水平居中 */ } .title_card:hover { box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2); } .title_card_text { position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; align-items: center; /* 垂直居中 */ justify-content: center; /* 水平居中 */ color: white; /* 将文字颜色设置为白色 */ opacity: 0; transition: opacity 0.3s; font-family: 'Trebuchet MS'; /* 将字体设置为Arial */ text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* 添加文字阴影 */ } .title_card:hover .title_card_text { opacity: 0.9; animation: jelly 0.5s; } @keyframes jelly { 0%, 100% { transform: scale(1, 1); } 25% { transform: scale(0.9, 1.1); } 50% { transform: scale(1.1, 0.9); } 75% { transform: scale(0.95, 1.05); } } HOME 🔭Hi there Glad to have you here as we surf the Internet. This website is not just a platform for me to express my thoughts and ideas, but also a place where I hope to connect with people who share similar interests or are simply curious about the world. Just here, I will delve into topics that fascinate me, share stories from my personal experiences, and offer insights that I've gained along the way. Whether it's about my latest adventures, reflections on life, or thoughts on various topics, I hope to provide content that is engaging and thought-provoking. Xplore this site, leave comments, ask questions, share experiences. We can learn from each other, and I'm excited to hear from you.Once again, thank you for visiting. I hope you find something here that resonates with you, inspires you, or simply makes you think. Enjoy exploring! INFO 12345678{ &quot;Name&quot;: &quot;gjx&quot;, &quot;Age&quot;: 19, &quot;Gender&quot;: &quot;Male&quot;, &quot;Home&quot;: &quot;TsingTao, Shandong, China&quot;, &quot;School&quot;: &quot;UESTC&quot;, &quot;Major&quot;: &quot;Software Engineering&quot;} Hobbies 🕹️Immersing in Diverse Gaming Universes 🎼Harmonizing with the Rhythm of Music 🪁Exploring the Depths of Literature 🧑🏻‍🎨Unearthing the Art of Beautification 🔦Mastering Productivity Tools ☕Crafting Code and Programing Solutions 🔗About this Site 📝Embark on a voyage through my educational explorations 📖Plunge into the chapters of my bookish journeys 🎮Venture into the digital landscapes of my gaming exploits 🦋Feast your eyes on the captivating imagery 💡Insights from my Tech Learning Journey","link":"/2024/01/04/Home/hello-world/"},{"title":"Letter From Olgierd von Everec","text":"Letter from Olgierd von Everec My Dearest Wife, Were I only as skilled with words as I am with my blade. Especially now, when an icy void grips my heart. I see how you look at me, and I see how you wither. I cannot help you, but I believe I can cease harming you. This letter and this rose are my farewell. May you live in health and remember but the good times. Olgierd The Painted World​ Geralt finds himself in the surreal painted world reminiscent of the estate. The dog and cat, who apparently exist simultaneously in both worlds, informing him that in order to truly awaken Iris, Geralt has to complete the memories she has been denying, and destroy the fears and nightmares that bind her. ​ As you reenact the memories, Geralt will see how the couple’s marriage began to deteriorate over time, how Iris’ family didn’t approve of Olgierd as her husband, and how Olgierd tried to use magic to summon Gaunter O’Dimm to try and break the pact he forged, but it ultimately failed and set fire to the manor. Eventually, it leads to a scene where, having grown indifferent to Iris and only remembering that he was supposed to love her, Olgierd gave her the strange cat and dog for company and the Caretaker for protection. Video","link":"/2024/01/15/Gaming/The%20Witcher%203/Letter-From-Olgierd-von-Everec/"},{"title":"DataBase Base_基础概念&amp;SQL语法","text":"MySQL Overview数据库相关概念数据库 : 数据库(DataBase,Scheme)就是信息的集合或者说数据库是由数据库管理系统管理的数据的集合。 数据库管理系统 : 数据库管理系统(Database Management System)是一种操纵和管理数据库的大型软件，通常用于建立、使用和维护数据库。 数据库系统 : 数据库系统(Database System)通常由软件、数据库和数据管理员(DBA)组成。 数据库管理员 : 数据库管理员(Database Administrator)负责全面管理和控制数据库系统。 启动 &amp; 客户端连接MySQL80 服务将开始监听特定的端口（默认是 3306），等待客户端的连接请求。一旦接收到请求，它就会处理这些请求，执行 SQL 查询，返回查询结果 123# 启动&amp;停止 Servicenet start mysql80net stop mysql80 客户端连接数据库的方式： 命令行：mysql -h 主机名 -P 端口号 -u 用户名 -p 密码 图形化工具：Navicat、SQLyog、SQL Server Management Studio 数据模型数据模型可以分为两种.关系型数据模型和非关系型数据模型 关系型数据模型关系型数据模型（RDBMS,Relational Database Management System）：关系型数据库模型是基于关系（表）的数据模型，使用表格来组织和存储数据。最常见的关系型数据库是 MySQL、Oracle、SQL Server 等。 ps:table 是关系型数据库的术语，对应的中文是表，也可以称为关系，由行和列组成。在 SQL 中，”record”和”field”是两个基本的概念，它们分别对应于数据库表中的行和列。 Record：在数据库中，一个 record（也被称为 row 或 tuple）代表一组相关的数据，例如一个用户的信息或一个订单的详情。一个 record 包含了一组 field，每个 field 存储了一项特定的信息，例如用户的名字或订单的价格。 Field：在数据库中，一个 field（也被称为 field 或 attribute）代表一种类型的数据，例如所有用户的名字或所有订单的价格。一个 field 在一个表中是垂直的，它包含了一个特定类型的所有值。 例如，考虑一个简单的 table，它有两个 field（”User ID”和”User Name”）和两个 record： User ID User Name 1 Alice 2 Bob 在这个例子中，”1”和”Alice”是第一个 record，”2”和”Bob”是第二个 record。”User ID”和”User Name”是两个 field。 非关系型数据模型非关系型数据模型（NoSQL）：非关系型数据库模型是一种非结构化的数据模型，不使用表格来组织和存储数据。它们可以是键值对存储、文档存储、列存储、图形数据库等。常见的非关系型数据库有 MongoDB、Redis、Cassandra 等。 SQL GrammerOverview 单行或多行书写，以分号结尾SQL 语句可以用空格和缩进来增强可读性SQL 语句不区分大小写，关键字建议使用大写Comment：单行注释（– comment）；多行注释（/_ comment _/）Category：DDL,DML,DQL,DCL Data type数值类型 数据类型 内存大小(Byte) TINYINT 1 SMALLINT 2 MEDIUMINT 3 INT 4 BIGINT 8 FLOAT 4 DOUBLE 8 DECIMAL(M, N) 取决于M和N 数据类型后面可加UNSIGNED修饰，例如age TINYINT UNSIGNED 对于DECIMAL(M, N)类型，M是数字的最大总位数，N是小数点后的位数。数值范围取决于M和N的值。如123.45，M=5,N=2 字符串类型 数据类型 大小 描述 CHAR 0-255Bytes 定长字符串 VARCHAR 0-65535Bytes 变长字符串 BLOB 0-65535Bytes 二进制形式的长文本数据 TEXT 0-65535Bytes 长文本数据 char(10) 会占用 10 个字符的存储空间，不足 10 个字符会使用空格补齐；性能高于 varcharvarchar(10) 会根据实际存储的字符数来占用存储空间，不会浪费空间 Date &amp; Time 类型 格式 范围 DATE YYYY-MM-DD 1000-01-01 到 9999-12-31 TIME HH:MM:SS -838:59:59 到 838:59:59 YEAR YYYY 1901 到 2155, 以及 0000 DATETIME YYYY-MM-DD HH:MM:SS 1000-01-01 00:00:00 到 9999-12-31 23:59:59 TIMESTAMP YYYY-MM-DD HH:MM:SS 1970-01-01 00:00:01 UTC 到 2038-01-19 03:14:07 UTC SQL SyntaxCATEGORY 分类 全称 说明 DDL Data Definition Language 定义数据库对象（数据库，表，字段） DML Data Manipulation Language 对数据表中的数据进行增删改 DQL Data Query Language 查询数据库中表的记录 DCL Data Control Language 创建数据库用户，控制数据库的访问权限 DML 语句和 DDL 语句区别：DML 是数据库操作语言（Data Manipulation Language）的缩写，是指对数据库中表记录的操作，主要包括表记录的插入、更新、删除和查询，是开发人员日常使用最频繁的操作。DDL （Data Definition Language）是数据定义语言的缩写，简单来说，就是对数据库内部的对象进行创建、删除、修改的操作语言。它和 DML 语言的最大区别是 DML 只是对表内部数据的操作，而不涉及到表的定义、结构的修改，更不会涉及到其他对象。DDL 语句更多的被数据库管理员（DBA）所使用，一般的开发人员很少使用。另外，由于 select 不会对表进行破坏，所以有的地方也会把 select 单独区分开叫做数据库查询语言 DQL（Data Query Language）。# 执行速度不同节选自 JavaGuide——SnailClimb DDLDatabase Manipulation 创建：CREATE DATABASE &lt;DATABASE_NAME&gt;; 删除：DROP DATABASE &lt;DATABASE_NAME&gt;; 查看：SHOW DATABASES; 使用：USE &lt;DATABASE_NAME&gt;; 查询当前数据库： SELECT DATABASE(); Table Manipulation 删除：DROP TABLE &lt;TABLE_NAME&gt;; 创建：CREATE TABLE &lt;TABLE_NAME&gt; (field_name field_type, ...); 重命名：ALTER TABLE &lt;TABLE_NAME&gt; RENAME TO &lt;NEW_TABLE_NAME&gt;; 删除重建：TRUNCATE TABLE &lt;TABLE_NAME&gt;; 描述表结构：DESC &lt;TABLE_NAME&gt;; 查询当前数据库中的表：SHOW TABLES; 查看表的创建语句：SHOW CREATE TABLE &lt;TABLE_NAME&gt;; 12345678CREATE TABLE student( id int, name varchar(32), age int);DESC student;ALTER TABLE student RENAME TO student_info;DROP student_info; Add/Modify Field： ALETR TABLE &lt;TABLE_NAME&gt; &lt;ADD|MODIFY&gt; &lt;FIELD_NAME&gt; &lt;FIELD_TYPE&gt;; Change Field：ALTER TABLE &lt;TABLE_NAME&gt; CHANGE &lt;FIELD_NAME&gt; &lt;NEW_FIELD_NAME&gt; &lt;FIELD_TYPE&gt;; Drop Field：ALTER TABLE &lt;TABLE_NAME&gt; DROP &lt;FIELD_NAME&gt;; 1234-- Field Manipulation ExamplesALTER TABLE student ADD age int UNSIGNED;ALTER TABLE student MODIFY age tinyint UNSIGNED;ALTER TABLE student CHANGE nickname username tinyint UNSIGNED; DMLINSERT基本的 INSERT 语句的语法如下： 1INSERT INTO table_name (field1, field2, field3, ...) VALUES (value1, value2, value3, ...); 例如，如果你有一个名为 users 的表，它有 id，name 和 email,gender 四个 field，你可以使用以下的 INSERT 语句来插入数据： 1INSERT INTO users (id, name, email) VALUES (1, 'John Doe', '123@gmail.com'); 可以省略列的名称，但必须提供所有 field的值，并且顺序必须与表中的列的顺序相同： 1INSERT INTO users VALUES (1, 'John Doe', '222@gmail.com','男'); 批量插入数据： 12345INSERT INTO users (id, name, email)VALUES(1, 'Alice', 'alice@example.com'),(2, 'Bob', 'bob@example.com'),(3, 'Charlie', 'charlie@example.com'); DELETE123DELETE FROM student; -- 删除表中所有数据DELETE FROM student where id = 1; -- 删除id为1的数据TRUNCATE TABLE student; -- 删除表中所有数据，但不删除表结构 🪧drop,delete,truncate的区别： DROP TABLE is a DDL command. It is used to delete a table and free space associated with the table. It also deletes the table structure. TRUNCATE TABLE is a DDL command. It is used to delete all the rows from a table and free the space used by those rows. It does not generate any undo logs, so it is faster than the DELETE command. However, you CANNOT roll back a TRUNCATE operation. Also, TRUNCATE TABLE resets the identity of the table. DELETE FROM is a DML command. It is used to delete all the rows from a table or certain rows that match a condition. It generates undo logs for every deleted row, so you CAN roll back a DELETE operation. It does not reset the identity of the table. DELETE FROM without a WHERE clause behaves like TRUNCATE TABLE. PS:identity is a property of a column that is used to generate a sequence of numbers(id e.g.). The identity column is commonly used as a primary key. 可参考如下文章补充学习JavaGuideZhiHu UPDATE12UPDATE student SET age = 18; -- Note:affects all rows in the table.UPDATE student SET age = 18 WHERE id = 1; DQLOVERVIEW数据查询语言（Data Query Language）用于从数据库中检索数据。 Sequence Of DQL 编写顺序： SELECT-&gt;FROM-&gt;WHERE-&gt;GROUP BY-&gt;HAVING-&gt;ORDER BY-&gt;LIMIT&gt;执行顺序： FROM-&gt;WHERE-&gt;GROUP BY-&gt;HAVING-&gt;SELECT-&gt;ORDER BY-&gt;LIMIT 练习Example 1234567891011-- table name: emp-- 1.查询年龄为20，21，22，23的女性员工信息SELECT * FROM emp WHERE gender='女' &amp;&amp; age IN (20,21,22,23);-- 2.查询性别为男，并且年属于[20,40]，名字为3个字的员工。SELECT * FROM emp WHERE gender='男' &amp;&amp; age BETWEEN 20 AND 40 &amp;&amp; name LIKE '___';-- 3.查询年龄小于60岁的男员工人数和女员工人数SELECT gender,count(*) FROM emp GROUP BY gender-- 4.查询所有年小于等于 35 员工的姓名和年龄，并对查询结果按年龄升序排序，如果年龄相同按入职时间降序排序SELECT name,age,entrydate FROM emp WHERE age &lt;= 35 ORDER BY age ASC,entrydate DESC;-- 5.查询性别为男，且年龄属于[20,40]的前5个员工，并对查询结果按年龄升序排序，如果年龄相同按入职时间降序排序SELECT name,age,entrydate FROM emp WHERE gender='男' &amp;&amp; age BETWEEN 20 AND 40 ORDER BY age ASC,entrydate DESC LIMIT 5; 基础查询12345678910111213table: student+-----+-------+-----------+------+| Sid | Sname | Sage | Ssex |+-----+-------+-----------+------+| 01 | 赵雷 | 1/1/1990 | 男 || 02 | 钱电 | 21/12/1990| 男 || 03 | 孙风 | 20/5/1990 | 男 || 04 | 李云 | 6/8/1990 | 男 || 05 | 周梅 | 1/12/1991 | 女 || 06 | 吴兰 | 1/3/1992 | 女 || 07 | 郑竹 | 1/7/1989 | 女 || 08 | 王菊 | 20/1/1990 | 女 |+-----+-------+-----------+------+ Basic Syntax 查询指定字段SELECT field1, field2, ... FROM table_name; 查询所有字段SELECT * FROM table_name; 指定条件查询SELECT field1, field2, ... FROM table_name WHERE condition; 查询结果去重SELECT DISTINCT field1, field2, ... FROM table_name; Condition SyntaxList of Comparison Operators =, !=,&lt;&gt;, &lt; &lt;=, &gt;, &gt;= 🪧Note:&lt;&gt; is the same as != BETWEEN ... AND ... IN(...) LIKE 🪧Note:pattern matching,placeholders:%,_ IS NULL,IS NOT NULL List of Logical Operators AND,&amp;&amp;,OR,||,NOT,! 12345678910111213141516SELECT * FROM student; -- 查询表中所有field数据SELECT id,name FROM student; -- 查询表中指定field的数据SELECT * FROM student WHERE id = 1 &amp;&amp; age &lt;=30; -- &amp;&amp; 可以用 AND 代替SELECT * FROM student WHERE id = 1 || age &lt;=30; -- || 可以用 OR 代替SELECT * FROM student WHERE Sid BETWEEN 01 AND 20; -- BETWEEN 用于范围查询[01,20]SELECT * FROM student WHERE Sid IN (01,02,03); -- IN 用于范围查询SELECT DISTINCT Ssex FROM student; -- DISTINCT 用于去重SELECT * FROM student WHERE enligh IS NOT NULL; -- IS NULL 用于判断是否为空-- =================================-- * LIKE *-- =================================SELECT * FROM student WHERE Sname LIKE '赵%'; -- % 多个任意字符SELECT * FROM student WHERE Sname LIKE '赵_'; -- _ 单个任意字符SELECT * FROM student WHERE Sname LIKE '赵__'; -- __ 两个任意字符SELECT * FROM student WHERE Sname LIKE '%子%'; -- Sname中包含子的record Examples 123456789101112131415161718-- example 1SELECT Sid,Sname FROM student WHERE Ssex='男';+-----+-------+| Sid | Sname |+-----+-------+| 01 | 赵雷 || 02 | 钱电 || 03 | 孙风 || 04 | 李云 |+-----+-------+-- example 2SELECT DISTINCT Ssex FROM student;+------+| Ssex |+------+| 男 || 女 |+------+ 聚合函数聚合函数（Aggregate Functions）用于计算表中列的值(如果为 NULL，则不参与计算)，返回一个单一的值。常用的聚合函数有： AVG()：返回某列的平均值 COUNT()：返回某列的行数 MAX()：返回某列的最大值 MIN()：返回某列的最小值 SUM()：返回某列值之和 COUNT(*) 表示计算所有行的数量，包括 NULL 值COUNT(field) 表示计算指定列的行数，不包括 NULL 值COUNT(DISTINCT field) 表示计算指定列的不同值的数量，不包括 NULL 值[[database02]]-&gt;See in next post Examples 123456789101112131415161718SELECT count(Sid) FROM student;+------------+| count(Sid) |+------------+| 8 |+------------+SELECT avg(Sage) FROM student;+---------------+| avg(Sage) |+---------------+| 19903121.3750 |+---------------+SELECT avg(Sage) FROM student WHERE Ssex='男';+---------------+| avg(Sage) |+---------------+| 19900662.0000 |+---------------+ 分组查询分组查询（Group By）用于结合聚合函数，根据一个或多个列对结果集进行分组。 Syntax:SELECT field1, field2, ... FROM table_name GROUP BY field1, field2, ... HAVE condition; Difference between WHERE and HAVING 执行时机不同：WHERE 在数据分组前的 record 进行过滤，HAVING 在数据分组后的 record 进行过滤执行顺序：where -&gt; aggregate -&gt; having 可选参数不同：WHERE 后面只能跟条件表达式，HAVING 后面可以跟条件表达式和聚合函数 WHERE is used to filter records before any groupings take place.HAVING is used to filter values after they have been grouped. Examples 12345678910111213141516171819202122232425262728293031-- 查询男女生的max/min age;SELECT Ssex,max(Sage),min(Sage) FROM student GROUP BY Ssex;+------+------------+------------+| Ssex | max(Sage) | min(Sage) |+------+------------+------------+| 男 | 1990-12-21 | 1990-01-01 || 女 | 1992-03-01 | 1989-07-01 |+------+------------+------------+-- 查询Sid&gt;2的男女生的max/min ageSELECT Ssex,max(Sage),min(Sage) from student WHERE Sid&gt;2 GROUP BY Ssex;+------+------------+------------+| Ssex | max(Sage) | min(Sage) |+------+------------+------------+| 男 | 1990-08-06 | 1990-05-20 || 女 | 1992-03-01 | 1989-07-01 |+------+------------+------------+-- 查询男女生的max/min age，分组结果只显示为Ssex=男的recordSELECT Ssex,max(Sage),min(Sage) from student GROUP BY Ssex HAVING Ssex='男';+------+------------+------------+| Ssex | max(Sage) | min(Sage) |+------+------------+------------+| 男 | 1990-12-21 | 1990-01-01 |+------+------------+------------+-- 查询年龄 &lt; 45 的employee，并根据workaddress分组，显示分组结果中address_count&gt;3的分组SELECT workaddress,count(*) AS address_count FROM employee WHERE age &lt; 45 GROUP BY workaddress HAVING address_count&gt;3;+--------------+----------------+| workaddress | address_count |+--------------+----------------+| Beijing | 4 || Shanghai | 5 |+--------------+----------------+ 排序查询Syntax SELECT field1, field2, ... FROM table_name ORDER BY field1 [ASC|DESC], field2 [ASC|DESC], ...; ASC: ascending order 升序 DESC: descending order 降序 如果有多个排序条件，则当前边的条件值一样时，才会判断第二条件 123456789101112131415SELECT * FROM student ORDER BY Sage ASC;+-----+-------+------------+------+| Sid | Sname | Sage | Ssex |+-----+-------+------------+------+| 07 | 郑竹 | 1989-07-01 | 女 || 01 | 赵雷 | 1990-01-01 | 男 || 08 | 王菊 | 1990-01-20 | 女 || 03 | 孙风 | 1990-05-20 | 男 || 04 | 李云 | 1990-08-06 | 男 || 02 | 钱电 | 1990-12-21 | 男 || 05 | 周梅 | 1991-12-01 | 女 || 06 | 吴兰 | 1992-03-01 | 女 |+-----+-------+------------+------+-- 按照age升序排序，如果age相同，则再按照entrydate降序排序SELECT * FROM emp ORDER BY age ASC,entrydate DESC; 分页查询Syntax SELECT field1, field2, ... FROM table_name LIMIT offset, count;offset表示偏移量，count表示查询的记录数offset = (pageNo - 1) * pageSize分页查询属于 MySQL 的扩展语法，不是 SQL 标准语法，不同的数据库有不同的实现方式 12345678910111213141516171819202122232425262728SELECT * FROM student LIMIT 0,3; -- 第1页SELECT * FROM student LIMIT 3,3; -- 第2页SELECT * FROM student LIMIT 6,2; -- 第3页+-----+-------+------------+------+| Sid | Sname | Sage | Ssex |+-----+-------+------------+------+| 01 | 赵雷 | 1990-01-01 | 男 || 02 | 钱电 | 1990-12-21 | 男 || 03 | 孙风 | 1990-05-20 | 男 |+-----+-------+------------+------+3 rows in set (0.27 sec)+-----+-------+------------+------+| Sid | Sname | Sage | Ssex |+-----+-------+------------+------+| 04 | 李云 | 1990-08-06 | 男 || 05 | 周梅 | 1991-12-01 | 女 || 06 | 吴兰 | 1992-03-01 | 女 |+-----+-------+------------+------+3 rows in set (0.23 sec)+-----+-------+------------+------+| Sid | Sname | Sage | Ssex |+-----+-------+------------+------+| 07 | 郑竹 | 1989-07-01 | 女 || 08 | 王菊 | 1990-01-20 | 女 |+-----+-------+------------+------+2 rows in set (0.22 sec) DCL用户管理CREATE用于创建一个新的用户，并设置其密码ALTER用于修改一个已存在的用户的密码DROP用于删除一个已存在的用户 %：表示用户可以从任何主机连接到数据库 localhost：表示用户只能从本地主机连接到数据库 192.168.1.1：表示用户只能从指定的 IP 地址连接到数据库 %.example.com：表示用户可以从 example.com 域名下的任何主机连接到数据库 1234CREATE USER 'Jason'@'xxx.xxx.x.x' IDENTIFIED BY 'password'; -- 可从指定主机连接到数据库CREATE USER 'Jason'@'%' IDENTIFIED BY 'JasonPassword'; -- 可从任何主机连接到数据库ALTER USER 'Jason'@'%' IDENTIFIED BY 'NewJasonPassword';DROP USER 'username'@'host'; 权限管理GRANT：用于授予用户数据库的访问权限REVOKE：用于撤销用户的数据库访问权限。例如： 1234-- 授予 user 在 database.table 上执行 SELECT，INSERT 和 DELETE 操作的权限。GRANT SELECT, INSERT, DELETE ON database.table TO 'user'@'host';-- 撤销了 user 在 database.table 上执行 INSERT 和 DELETE 操作的权限。REVOKE INSERT, DELETE ON database.table FROM 'user'@'host';","link":"/2024/01/21/Tech/DataBase/DataBase01/"},{"title":"PicGo-Github配置图床(Typora&amp;VSCode)","text":"Intro什么是图床图床，也被称为图像托管服务（Image Hosting Service），是一种在线服务，它提供了一个方便的方式来存储和分享图片。用户可以上传图片到图床，然后图床会生成一个可以在网页、论坛、博客或其他地方使用的链接，以便他人可以查看或下载这些图片。 图床服务通常提供一定的免费存储空间，但可能会对图片的大小、格式或数量有限制。一些图床还提供额外的付费服务，如更大的存储空间、更高的带宽或更多的功能。 优缺点 节省存储空间：图床服务可以帮助你节省本地或服务器的存储空间，因为图片是存储在图床服务的服务器上的。 易于分享：图床服务通常会为上传的图片提供一个 URL 链接，你可以将这个链接分享给他人，或者在网站、博客、论坛等地方使用，让他人可以轻松地查看或下载图片。 易于管理：许多图床服务提供了用户友好的界面和工具，使得上传、管理和分享图片变得非常简单 虽然图床服务有许多优势，但也有一些潜在的缺点，如可能的隐私问题、服务商可能会关闭或更改服务条款、以及对免费用户的存储空间或带宽的限制等。 StepsGithub Repo 新建 Repo，可见性设置为 Public Gen GitHub Token,在Personal access tokens 中可选 Fine-grained tokens 或 Tokens(classic)，前者对权限有更细致的划分。 PicGo 下载源 地址/安装方式 GitHub Release https://github.com/Molunerfinn/PicGo/releases 腾讯云 COS https://github.com/Molunerfinn/PicGo/releases 山东大学镜像站 https://mirrors.sdu.edu.cn/github-release/Molunerfinn_PicGo 在图床设置中进行如下配置 自定义域名可设置为https://cdn.jsdelivr.net/gh/your-repo-name@master Typora语言设置为中文 偏好-图形，进行如下设置 VSCode下载 PicGo 插件，Ctrl+Shift+P - Preferences: Open User Settings (JSON)，添加如下配置 默认快捷键如下","link":"/2024/01/13/Tech/FrontEnd/imageBed/"},{"title":"DataBase Base_函数&amp;约束","text":"函数聚合函数","link":"/Tech/DataBase/DataBase02/"},{"title":"VSCode Keyboard Shortcuts","text":"My frequently used VSCode Keyboard Shortcuts; Ⅰ. EditorGroups Shortcut Command Ctrl + 1/2 Focus first/second editor group Ctrl + M Maximize editor group Ctrl + W Close editor Alt + F4 Close windows Alt + A/D Open previous/next editor Ctrl + Shift + W/A/S/D View: split editor up/down/left/right 📨 PS: Ctrl + M When spliting, maximize the current editor group, press again to cancel Alt + A/D Open previous/next editor in the current editor group Ctrl + Shift + W/A/S/D Move the current editor group to the up/left/down/right Coding Shortcut Command Alt + Up/DownArrow Move line up/down Alt + Shift + Up/DownArrow Copy line up/down Ctrl + C/X/Y Copy/Cut/Delete line Ctrl + Z Undo Ctrl + Shift + Z Redo Alt + Scroll Accelerate scrolling Ctrl + Alt + Up/DownArrow Add cursor above/below Alt + Click Insert cursor at click Ctrl + Home/End cursorTop/Bottom 📨 PS: Alt + Up/DownArrow Move the current line up/down Ctrl + Alt + Up/DownArrow Add cursor above/below the current line, press ESCto exit Alt + Click Insert cursor where you click, press ESC to exit Ctrl + Home/End Move cursor to the top/bottom of the file Go to and Peek Shortcut Command F12 Go to definition Ctrl + F12 Peek implementation Shift + F12 Go to references Alt + F12 Peek definition Shift + Alt + F12 Find all references Ctrl + Shift + O Go to symbol in editor Ctrl + T Go to symbol in workspace Ⅱ. ExplorerFiles Shortcut Command J New File K New Folder E Reveal in explorer C/X/R Copy/cut/rename T Open in default integrated terminal List Shortcut Command I List.focusParent A List.collapse D List.expand Q List.collapseAll F3 List.find Ⅲ. Workbench Shortcut Command Ctrl + Shift + P Show all command Ctrl + Shift + M Toggle panel visibility Ctrl + Shift + F Toggle search visibility Ctrl + Shift + G Toggle source control visibility Ctrl + Shift + T Toggle todo tree visibility Ctrl + E Toggle explorer visibility Alt + E Toggle Secondary Sidebar visibility","link":"/2024/01/15/Tech/VSCode/Shortcuts/"},{"title":"VSCode C_Cpp Debug","text":"Intro ​今天阅读Configure launch.json for C/C++ debugging in Visual Studio Code，初步完成VSCode C/C++ debug的配置，于是写下本文，旨在记录个人在Windows/WSL平台，VSCode配置C/C++的Debug环境过程，以供其他初学者参考。在此之前，你需要先安装VSCode，配置好WSL环境以及gcc环境变量。文章介绍了launch.json和tasks.json中部分attribute的含义，并给出本人的配置供读者参考 Stepslaunch.json A launch.json file is used to configure the debugger in Visual Studio Code. Visual Studio Code generates a launch.json (under a .vscode folder in your project) with almost all of the required information. To get started with debugging you need to fill in the program field with the path to the executable you plan to debug. This must be specified for both the launch and attach (if you plan to attach to a running instance at any point) configurations. Launch.json Code个人配置如下，仅供参考 123456789101112131415161718192021{ &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ { &quot;name&quot;: &quot;c/c++ gdb&quot;, &quot;type&quot;: &quot;lldb&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;args&quot;: [], &quot;cwd&quot;: &quot;${fileDirname}&quot;, &quot;console&quot;: &quot;integratedTerminal&quot;, &quot;windows&quot;: { &quot;program&quot;: &quot;${fileDirname}/${fileBasenameNoExtension}.exe&quot;, &quot;preLaunchTask&quot;: &quot;build active file(Windows)&quot; }, &quot;linux&quot;: { &quot;program&quot;: &quot;${fileDirname}/${fileBasenameNoExtension}.out&quot;, &quot;preLaunchTask&quot;: &quot;build active file(Linux)&quot; } } ]} Attributes version：version of this file format不必修改 configurations：List of configurations.configuration数组， 包含了你的调试配置。每个调试配置都是一个对象，包含了一系列的字段，用于定义如何启动和运行调试器 type：Type of configuration用于指定要使用的调试器类型。可选的值取决于你已经安装的调试器扩展。常见的type字段值有 node、java、lldb(主要用于调试c/cpp以及其他llvm支持的语言)、chrome(JavaScript,TypeScript)等等 name：Name of configuration; appears in the launch configuration dropdown menu.字面意思，此处的c/c++ gdb即为launch.json的name preLaunchTask：Task to run before debug session starts.在debug开始前执行的task，例如编译你的代码，生成一个可执行文件(.exe, .out e.g.)，如果task失败，则不会启动debug session。此处我们要配置c/cpp的debug环境，所以preLaunchTask设置为build active file(名字任意)，与tasks.json中的task对象的label属性对应即可 program：Path to the program to debug.Specify debug program’s path。以windows平台为例，我们编写了hello.c，要调试的程序即为filePath/hello.exe，我们可以用如下预定义变量简化program Common pre-defined variables provided by VSCode for configuration files: ${workspaceFolder}: The path of the folder opened in VS Code. ${workspaceRootFolderName}: The name of the folder opened in VS Code without any slashes (/). ${file}: The current opened file. ${fileWorkspaceFolder}: The current opened file’s workspace folder. ${relativeFile}: The current opened file relative to workspaceFolder. ${relativeFileDirname}: The current opened file’s dirname relative to workspaceFolder. ${fileBasename}: The current opened file’s basename. ${fileBasenameNoExtension}: The current opened file’s basename with no file extension. ${fileDirname}: The current opened file’s dirname. ${fileExtname}: The current opened file’s extension. ${lineNumber}: The current selected line number in the active file. ${selectedText}: The current selected text in the active file. ${execPath}: The location of the VS Code executable. ${defaultBuildTask}: The name of the default build task. request：Indicates whether the configuration section is intended to launch the program or attach to an already running instance.一般选择launch，前端debug可能会用到attach console：Terminal type to use.取决个人喜好，可选参数如下 internalConsole：VSCode Panel中的TERMINAL integratedTerminal：VSCode Panel中的DEBUG CONSOLE externalTerminal：外部的集成终端 cwd：Program working directory.cwd 字段用于设置当前工作目录（Current Working Directory）。当你启动调试器时，这个目录将被用作程序的工作目录，一般配置为 &quot;cwd&quot;: &quot;${fileDirname}&quot; window/linux/osx：specific launch configuration attributes针对 Window,Linux/WSL,MacOS 平台单独设置的attributes tasks.jsonTasks.json Code123456789101112131415161718192021222324252627{ &quot;version&quot;: &quot;2.0.0&quot;, &quot;tasks&quot;: [ { &quot;type&quot;: &quot;shell&quot;, &quot;label&quot;: &quot;build active file(Windows)&quot;, &quot;command&quot;: &quot;gcc&quot;, &quot;args&quot;: [ &quot;-g&quot;, &quot;${file}&quot;, &quot;-o&quot;, &quot;${fileDirname}\\\\${fileBasenameNoExtension}.exe&quot; ], }, { &quot;type&quot;: &quot;shell&quot;, &quot;label&quot;: &quot;build active file(Linux)&quot;, &quot;command&quot;: &quot;gcc&quot;, &quot;args&quot;: [ &quot;-g&quot;, &quot;${file}&quot;, &quot;-o&quot;, &quot;${fileDirname}/${fileBasenameNoExtension}.out&quot; ], } ],} Attribute tasks：The task configurations. Usually these are enrichments of task already defined in the external task runner.例如之前在launch.json定义的两个task 12345678&quot;windows&quot;: { &quot;program&quot;: &quot;${fileDirname}/${fileBasenameNoExtension}.exe&quot;, &quot;preLaunchTask&quot;: &quot;build active file(Windows)&quot;},&quot;linux&quot;: { &quot;program&quot;: &quot;${fileDirname}/${fileBasenameNoExtension}.out&quot;, &quot;preLaunchTask&quot;: &quot;build active file(Linux)&quot;} type：Defines whether the task is run as a process or as a command inside a shell.可选参数有shell,progess。gcc命令在shell中执行，此处选择shell即可 label：The task’s user interface label任务的名称，在launch.json通过label specify tasks to run command：The command to be executed. Can be an external program or a shell command.此处选择gcc即可，也可选clang等c/cpp编译器 args：Arguments passed to the command when this task is invoked.命令的参数，例如-o，-g等等 Outro​以经典的hello.c测试，能正常debug。希望本文对你有帮助🕊️","link":"/2024/01/15/Tech/VSCode/DebugForC/"},{"title":"Recommended VSCode Extensions","text":"个人使用插件推荐，仅供参考。 Ⅰ. Beautification Themes Dark Space Material Theme Tokyo Night Tokyo Night Ported Nvim Tokyo Night Frameless Solarized Palenight Icons Material Icon Theme Fluent Icons Customization CodeUIHighlight web colors in your editor Color HighlightHighlight web colors in your editor Apc Custom UI++Advanced VSCode user interface customizations. Very experimental. VSCode AnimationsClean and customizable animations for VSCode Ⅱ. ProductivityEditing BookmarksMark lines and jump to them Code TranslateA pure vscode translation plug-in; 一款纯粹的 vscode 滑词翻译插件 CodeSnap📷 Take beautiful screenshots of your code Github CopilotYour AI pair programmer GitHub Copilot ChatAI chat features powered by Copilot Error LensImprove highlighting of errors, warnings and other language diagnostics. Better CommentsImprove your code commenting by annotating with alert, informational, TODOs, and more! Markdown Markdown All In OneAll you need to write Markdown (keyboard shortcuts, table of contents, auto preview and more) Markdown Preview EnhancedMarkdown Preview Enhanced ported to vscode Markdown LintMarkdown linting and style checking for Visual Studio Code MarkmapVisualize your Markdown as mindmaps with Markmap. PicGoUpload images to online, and generate markdown urls. FoamVS Code + Markdown + Wikilinks for your note taking and knowledge base Formatter PrettierCode formatter using prettier Git Git GraphView a Git Graph of your repository, and perform Git actions from the graph. Git HistoryView git log, file history, compare branches or commits GitHub CodespacesYour instant dev environment Web Live ServerLaunch a development local Server with live reload feature for static &amp; dynamic pages Miscellaneous Live ServerLaunch a development local Server with live reload feature for static &amp; dynamic pages LeetCodeSolve LeetCode problems in VS Code file-sizeShow file size in the status bar Resource MonitorDisplay CPU frequency, usage, memory consumption, and battery percentage remaining within the VSCode status bar","link":"/2024/01/17/Tech/VSCode/RecommendedExtensions/"},{"title":"Phantom Liberty","text":"Lyricsby CD PROJEKT RED, Dawid Podsiadło, P.T. Adamczyk Album Cyberpunk 2077: Phantom Liberty (Original Score - Deluxe Edition) CD PROJEKT RED, Dawid Podsiadło, P.T. Adamczyk – Phantom Liberty lyrics | Matchlyric Verse 1Found outTreasures are always lostPleasures and rage combinedI’m watchin’ youBe careful with your movesTonight, I think the time is rightI think the blood has driedIt cries for moreSo what are we waiting for? Chorus 1Wires and chains(I’m just tired of lookin’ the other way)Starting to fade(I’m just tired of lookin’ the other way)It feels like a game(I’m just tired of lookin’ the other way)You have to play(I’m just tired of lookin’ the other way) Verse 2Lights out, is this who you really are?Can’t look into your eyesYour twisted mindIt’s dark, so darkWe end it nowIt ends right here, right nowPlease tell me you brought the ironLet’s light up the skyAnd fade into the night Chorus 1Wires and chains(I’m just tired of lookin’ the other way)Starting to fade(I’m just tired of lookin’ the other way)It feels like a game(I’m just tired of lookin’ the other way)You have to play(I’m just tired of lookin’ the other way) BridgeThe days when it was good are gone (*Nah-nah-nah, nah-nah, nah*)I’m tryna see what it was for, but I’ll never know (*Nah-nah-nah, nah-nah, nah*)And though it’s dead, I hear the call (*Nah-nah-nah, nah-nah, nah*)Ooh-ooh-ooh-ooh-ooh Chorus 2Wires and chains(I’m just tired of lookin’ the other way)Starting to fade(I’m just tired of lookin’ the other way)Feels like a game(I’m just tired of lookin’ the other way)You can’t escape(I’m just tired of lookin’ the other way)Wires and chains(I’m just tired of lookin’ the other way)Starting to fade(I’m just tired of lookin’ the other way)Feels like a game(I’m just tired of lookin’ the other way)You can’t escape(I’m just tired of lookin’ the other way) OutroI found outTreasures are always lostPleasures are long forgottenWho are you now? Appreciation“Phantom Liberty” by Dawid Podsiadło &amp; P.T. Adamczyk explores themes of lost treasures, suppressed emotions, and the feeling of being trapped. The lyrics suggest a sense of danger and caution, urging the listener to be careful with their actions and movements. The line “I think the blood is dried, it cries for more” implies a craving for intensity and stimulation. There is an underlying desire to break free from a stagnant and monotonous existence. The chorus of the song emphasizes the feeling of being stuck and unable to escape. Wires and chains symbolize constraints and limitations, while the mention of fading suggests a loss of vitality or passion. The lyrics portray life as a game that one must play, even if it feels repetitive and meaningless. It hints at the idea that one may feel trapped by circumstances beyond their control. In the second verse, the lyrics delve into the darkness within someone’s mind. The narrator’s inability to look into the eyes of another person suggests a lack of trust or fear of confronting their true intentions. There is a desire to bring an end to this twisted and oppressive situation, as indicated by the line “We end it now, it ends right here, right now.” The idea of fading into the moon signifies a longing for escape or transcendence. The bridge reflects on the loss of better days and the frustration of not fully understanding the purpose behind certain experiences. The mention of hearing the clock suggests an awareness of time passing and the need to take action. Overall, “Phantom Liberty” depicts a struggle with confinement, questioning the meaning of existence, and a yearning for freedom and liberation. 流行音乐常用的歌曲结构一般是ABABCB，也就是Verse-Chorus-Verse-Chorus-Bridge-Chorus， VERSE 是主歌， CHORUS 是副歌(chorus有合唱，副歌的意思)。 Bridge是经常出现在第二段副歌之后的乐段，为歌曲提供一些变化、增加张力等。 长度一般是4或8小节，也被称为“middle 8”，具体时长取决于歌曲需要","link":"/2024/01/14/Gaming/CyberPunk2077/Phantom-Liberty/"}],"tags":[{"name":"TheWitcher3","slug":"TheWitcher3","link":"/tags/TheWitcher3/"},{"name":"HeartsOfStone","slug":"HeartsOfStone","link":"/tags/HeartsOfStone/"},{"name":"CDPR","slug":"CDPR","link":"/tags/CDPR/"},{"name":"Music","slug":"Music","link":"/tags/Music/"},{"name":"DataBase","slug":"DataBase","link":"/tags/DataBase/"},{"name":"SQL","slug":"SQL","link":"/tags/SQL/"},{"name":"Web","slug":"Web","link":"/tags/Web/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"Image Hosting Service","slug":"Image-Hosting-Service","link":"/tags/Image-Hosting-Service/"},{"name":"Typora","slug":"Typora","link":"/tags/Typora/"},{"name":"VSCode","slug":"VSCode","link":"/tags/VSCode/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"Shortcuts","slug":"Shortcuts","link":"/tags/Shortcuts/"},{"name":"Productivity","slug":"Productivity","link":"/tags/Productivity/"},{"name":"C_Cpp","slug":"C-Cpp","link":"/tags/C-Cpp/"},{"name":"Debug","slug":"Debug","link":"/tags/Debug/"},{"name":"json","slug":"json","link":"/tags/json/"},{"name":"windows","slug":"windows","link":"/tags/windows/"},{"name":"linux","slug":"linux","link":"/tags/linux/"},{"name":"Extensions","slug":"Extensions","link":"/tags/Extensions/"},{"name":"Beautification","slug":"Beautification","link":"/tags/Beautification/"},{"name":"Cyberpunk2077","slug":"Cyberpunk2077","link":"/tags/Cyberpunk2077/"},{"name":"Phantom Liberty","slug":"Phantom-Liberty","link":"/tags/Phantom-Liberty/"}],"categories":[{"name":"Gaming","slug":"Gaming","link":"/categories/Gaming/"},{"name":"Tech","slug":"Tech","link":"/categories/Tech/"},{"name":"The Witcher 3","slug":"Gaming/The-Witcher-3","link":"/categories/Gaming/The-Witcher-3/"},{"name":"DataBase","slug":"Tech/DataBase","link":"/categories/Tech/DataBase/"},{"name":"FrontEnd","slug":"Tech/FrontEnd","link":"/categories/Tech/FrontEnd/"},{"name":"VSCode","slug":"Tech/VSCode","link":"/categories/Tech/VSCode/"},{"name":"Cyberpunk 2077","slug":"Gaming/Cyberpunk-2077","link":"/categories/Gaming/Cyberpunk-2077/"}],"pages":[{"title":"","text":".title_card { display: flex; /* 使用flex布局 */ position: relative; /* 添加relative定位 */ box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2); transition: 0.3s; width: 100%; height: 100%; border-radius: 5px; overflow: hidden; align-items: center; /* 垂直居中 */ justify-content: center; /* 水平居中 */ } .title_card:hover { box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2); } .title_card_text { position: absolute; top: 0; left: 0; width: 100%; height: 100%; display: flex; align-items: center; /* 垂直居中 */ justify-content: center; /* 水平居中 */ color: white; /* 将文字颜色设置为白色 */ opacity: 0; transition: opacity 0.3s; font-family: 'Trebuchet MS'; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); /* 添加文字阴影 */ } .title_card:hover .title_card_text { opacity: 0.9; animation: jelly 0.5s; } @keyframes jelly { 0%, 100% { transform: scale(1, 1); } 25% { transform: scale(0.9, 1.1); } 50% { transform: scale(1.1, 0.9); } 75% { transform: scale(0.95, 1.05); } } h1 { text-align: center; font-size: 4em; font-family: 'Trebuchet MS'; color: teal; } GALLERY Photography Miscellaneous Anime Van Goah","link":"/gallery/index.html"}]}